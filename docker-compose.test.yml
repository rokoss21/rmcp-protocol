version: '3.8'

services:
  # Mock MCP Server - provides atomic tools
  mock-mcp-server:
    build:
      context: ./mock_mcp_server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - rmcp-test-network

  # Mock Agent - provides AI agent capabilities
  mock-agent:
    build:
      context: ./mock_agent
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - PYTHONUNBUFFERED=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - rmcp-test-network

  # RMCP Main Service
  rmcp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PYTHONUNBUFFERED=1
      - RMCP_CONFIG_PATH=/app/config/test_config.yaml
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
    depends_on:
      mock-mcp-server:
        condition: service_healthy
      mock-agent:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - rmcp-test-network

networks:
  rmcp-test-network:
    driver: bridge

volumes:
  rmcp-data:
    driver: local

